"""
This model is based on the ccm u1_semantic.py tutorial.

Generated by gactar test
          https://github.com/asmaloney/gactar
          on 0001-01-01 @ 00:00:00

NOTE: This is a generated file. Any changes may be overwritten.
"""

import pyactr as actr
import pyactr_print

pyactr_semantic = actr.ACTRModel(
    subsymbolic=True,
)

# pyactr doesn't handle general printing, so use gactar to add this capability
pyactr_print.PrintBuffer(pyactr_semantic)

# amod line 28
actr.chunktype('isMember', 'object, category, judgment')
# amod line 29
actr.chunktype('property', 'object, attribute, value')

memory = pyactr_semantic.decmem

# finst defaults to 0 in pyactr, so set it to 4 which is the default in ACT-R
pyactr_semantic.retrieval.finst = 4

goal = pyactr_semantic.set_goal('goal')

# amod line 36
memory.add(actr.chunkstring(string='''
	isa			property
	object		shark
	attribute	dangerous
	value		true
'''))
# amod line 37
memory.add(actr.chunkstring(string='''
	isa			property
	object		shark
	attribute	locomotion
	value		swimming
'''))
# amod line 38
memory.add(actr.chunkstring(string='''
	isa			property
	object		shark
	attribute	category
	value		fish
'''))
# amod line 39
memory.add(actr.chunkstring(string='''
	isa			property
	object		fish
	attribute	category
	value		animal
'''))
# amod line 40
memory.add(actr.chunkstring(string='''
	isa			property
	object		bird
	attribute	category
	value		animal
'''))
# amod line 41
memory.add(actr.chunkstring(string='''
	isa			property
	object		canary
	attribute	category
	value		bird
'''))
# amod line 45
goal.add(actr.chunkstring(string='''
	isa			isMember
	object		shark
	category	animal
	judgment	None
'''))

# Starting point - first production to match
# amod line 49
pyactr_semantic.productionstring(name='initialRetrieval', string='''
     =goal>
		isa			isMember
		object		=obj
		judgment	None
     ==>
     =goal>
		isa			isMember
		judgment	"pending"
     ~retrieval>
     +retrieval>
		isa			property
		object		=obj
		attribute	category
''')

# amod line 65
pyactr_semantic.productionstring(name='directVerify', string='''
     =goal>
		isa			isMember
		object		=obj
		category	=cat
		judgment	"pending"
     =retrieval>
		isa			property
		object		=obj
		attribute	category
		value		=cat
     ==>
     =goal>
		isa			isMember
		judgment	"yes"
     !print>
          text "'Yes'"
     ~goal>
''')

# amod line 77
pyactr_semantic.productionstring(name='chainCategory', string='''
     =goal>
		isa			isMember
		object		=obj1
		category	=cat
		judgment	"pending"
     =retrieval>
		isa			property
		object		=obj1
		attribute	category
		value		=obj2
		value		~=cat
     ==>
     =goal>
		isa		isMember
		object	=obj2
     ~retrieval>
     +retrieval>
		isa			property
		object		=obj2
		attribute	category
''')

# amod line 88
pyactr_semantic.productionstring(name='fail', string='''
     =goal>
		isa			isMember
		judgment	"pending"
     ?retrieval>
		state	error
     ==>
     =goal>
		isa			isMember
		judgment	"no"
     !print>
          text "'No'"
     ~goal>
''')


# Main
if __name__ == '__main__':
    sim = pyactr_semantic.simulation( gui=False )
    sim.run()
    if goal.test_buffer('full'):
        print('chunk left in goal: ' + str(goal.pop()))
    if pyactr_semantic.retrieval.test_buffer('full'):
        print('chunk left in retrieval: ' + str(pyactr_semantic.retrieval.pop()))
