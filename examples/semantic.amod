==model==

// The name of the model (used when generating code and for error messages)
name: semantic

// Description of the model (currently output as a comment in the generated code)
description: 'This model is based on the u1_semantic.py tutorial.'

// Examples of starting goals to use when running the model
examples {
    'isMember shark fish None'
    'isMember shark animal None'
    'isMember canary fish None'
}

==config==

// Turn on logging by setting 'log' to 'true' or 1
actr { log: false }

// Declare chunks and their layouts
chunks {
    isMember( object group result )
    property( object key value )
}

// List of text outputs to create (by name)
text_outputs { text }

==init==

// Initialize the memory
memory {
    'property shark dangerous true'
    'property shark locomotion swimming'
    'property shark category fish'
    'property fish category animal'
    'property bird category animal'
    'property canary category bird'
}

==productions==

// Name of the production
initialRetrieval {
    // Buffers to match
    match {
        goal: `isMember ?obj ?cat None`
    }
    // Steps to execute
    do {
        set result of goal to 'pending'
        recall `property ?obj category ?`
    }
}

directVerify {
    match {
        goal: `isMember ?obj ?cat pending`
        retrieval: `property ?obj category ?cat`
    }
    do {
        set result of goal to 'yes'
        write 'Yes' to text
    }
}

chainCategory {
    match {
        goal: `isMember ?obj1 ?cat pending`
        retrieval: `property ?obj1 category ?obj2!?cat`
    }
    do {
        set object of goal to obj2
        recall `property ?obj2 category ?`
    }
}

fail {
    match {
        goal: `isMember ?obj1 ?cat pending`
        memory: `_status error`
    }
    do {
        set result of goal to 'no'
        write 'No' to text
    }
}