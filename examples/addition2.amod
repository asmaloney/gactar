==model==

// The name of the model (used when generating code and for error messages)
name: addition2

// Description of the model (currently output as a comment in the generated code)
description: "This model is based on the u1_addition2.py tutorial."

// Examples of starting goals to use when running the model
examples {
    'add 3 6 4 7 None None None'
}

==config==

// Turn on logging by setting 'log' to 'true' or 1
actr { log: false }

// Declare chunks and their layouts
chunks {
    add( slot_1 slot_2 slot_3 slot_4 slot_5 slot_6 slot_7 )
    addfact( first second sum )
}

==init==

// Initialize the memory
memory {
    'addfact 3 4 7'
    'addfact 6 7 13'
    'addfact 10 3 13'
    'addfact 1 7 8'
}

==productions==

// Name of the production
startPair {
    // Buffers to match
    match {
        goal: `add ? ?one1 ? ?one2 ? None?ans ?`
    }
    // Steps to execute
    do {
        set slot_6 of goal to 'busy'
        recall `addfact ?one1 ?one2 ?`
    }
}

addOnes {
    match {
        goal: `add ? ? ? ? ? busy?ans ?carry`
        retrieve: `addfact ? ? ?sum`
    }
    do {
        set slot_6 of goal to sum
        set slot_7 of goal to 'busy'
        recall `addfact 10 ? ?sum`
    }
}

processCarry {
    match {
        goal: `add ?ten1 ? ?ten2 ? None?tenAns ?oneAns busy?carry`
        retrieve: `addfact 10 ?rem ?sum`
    }
    do {
        set slot_5 of goal to 'busy'
        set slot_6 of goal to rem
        set slot_7 of goal to 1
        recall `addfact ?ten1 ?ten2 ?`
    }
}

noCarry {
    match {
        goal: `add ?ten1 ? ?ten2 None?tenAns ?oneAns busy?carry`
        memory: `_status error`
    }
    do {
        set slot_4 of goal to 'busy'
        set slot_6 of goal to 0
        recall `addfact ?ten1 ?ten2 ?`
    }
}

addTensDone {
    match {
        goal: `add ? ? ? ? busy?tenAns ?oneAns 0`
        retrieve: `addfact ? ? ?sum`
    }
    do {
        print sum, oneAns
        set slot_5 of goal to sum
    }
}

addTensCarry {
    match {
        goal: `add ? ? ? ? busy?tenAns ? 1?carry`
        retrieve: `addfact ? ? ?sum`
    }
    do {
        set slot_7 of goal to 0
        recall `addfact 1 ?sum ?`
    }
}