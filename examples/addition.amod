==model==

// The name of the model (used when generating code and for error messages)
name: addition

// Description of the model (currently output as a comment in the generated code)
description: 'This is a model which adds numbers. From the u1_addition.py tutorial.'

// Examples of starting goals to use when running the model
examples {
    `add( 3 1 nil nil )`
    `add( 5 2 nil nil )`
}

==config==

// Turn on logging by setting 'log' to 'true' or 1
actr { log: true }

// Declare chunks and their layouts
chunks {
    add( first second count sum )
    count( first second )
}

==init==

// Initialize the memory
memory {
    `count( 0 1 )`
    `count( 1 2 )`
    `count( 2 3 )`
    `count( 3 4 )`
    `count( 4 5 )`
    `count( 5 6 )`
    `count( 6 7 )`
    `count( 7 8 )`
}

==productions==

// Name of the production
initializeAddition {
    // Optional description
    description: 'Starting point - first production to match'
    
    // Buffers to match
    match {
        goal `add( ?num1 ? nil nil )`
    }
    // Steps to execute
    do {
        set goal.count to 0
        set goal.sum to ?num1
        recall `count( ?num1 ? )`
    }
}

terminateAddition {
    match {
        goal `add( ? ?num2 ?num2 ?sum )`
    }
    do {
        print ?sum
        clear goal
    }
}

incrementSum {
    match {
        goal `add( ? ?num2 ?count!?num2 ?sum )`
        retrieval `count( ?sum ?next )`
    }
    do {
        set goal.sum to ?next
        recall `count( ?count ? )`
    }
}

incrementCount {
    match {
        goal `add( ? ? ?count ?sum )`
        retrieval `count( ?count ?next )`
    }
    do {
        set goal.count to ?next
        recall `count( ?sum ? )`
   }
}
